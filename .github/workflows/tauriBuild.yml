name: Build and Release

on:
  push:
    paths:
      - 'src-tauri/tauri.conf.json'
    branches:
      - main

jobs:
  build:
    name: Build on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Tauri Action Setup
      - name: Setup Tauri Action
        uses: tauri-apps/tauri-action@v0
        with:
          node-version: '20'
      
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install 

      # Cache Rust dependencies
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install dependencies
      - name: Install dependencies
        run: yarn install

      # Build project
      - name: Build project
        run: yarn tauri build --target all
        env:
          RUST_BACKTRACE: full

      # List Artifacts
      - name: List Artifacts
        run: ls -R src-tauri/target/release/bundle/

      # Publish to GitHub Releases
      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm
            src-tauri/target/release/bundle/**/*.exe
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.pkg
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
